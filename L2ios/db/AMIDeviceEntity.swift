//
//  Created by Sergei E. on 12/11/18.
//  (c) 2018 Ambrosus. All rights reserved.
//  

import GRDB

struct AMIDeviceEntity : Codable, FetchableRecord, MutablePersistableRecord {
    public static var databaseTableName = "device"
    
    var id: Int64?
    var deviceModelId: Int64?
    var autogeneratedName: String
    var name: String
    var active: Bool
    var macaddr: Data
    var charge: Double
    var rssi: Double
    var temp: Double
    var pressure: Double
    var humidity: Double
    var tsAdded: Double
    var tsLastSeen: Double
    var unseenFlag: Bool
    
    private enum CodingKeys: String, CodingKey, ColumnExpression {
        case id, deviceModelId, autogeneratedName, name, active, macaddr, charge, rssi, temp, pressure, humidity, tsAdded, tsLastSeen, unseenFlag
    }
    
    // Update a player id after it has been inserted in the database.
    mutating func didInsert(with rowID: Int64, for column: String?) {
        id = rowID
    }
    
    static func orderedByName() -> QueryInterfaceRequest<AMIDeviceEntity> {
        return AMIDeviceEntity.order(CodingKeys.name)
    }
    
    static func orderedByTSAdded() -> QueryInterfaceRequest<AMIDeviceEntity> {
        return AMIDeviceEntity.filter(sql: "unseenFlag = 0").order(CodingKeys.tsAdded)
    }
    
    static func orderedByTSLastSeen() -> QueryInterfaceRequest<AMIDeviceEntity> {
        return AMIDeviceEntity.order(CodingKeys.tsLastSeen)
    }
}
